<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bestomb.dao.ICemeteryDao">
    <resultMap id="BaseResultMap" type="com.bestomb.entity.Cemetery">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="province_id" property="provinceId" jdbcType="VARCHAR"/>
        <result column="county_id" property="countyId" jdbcType="VARCHAR"/>
        <result column="city_id" property="cityId" jdbcType="VARCHAR"/>
        <result column="town_id" property="townId" jdbcType="VARCHAR"/>
        <result column="village_id" property="villageId" jdbcType="VARCHAR"/>
        <result column="community_id" property="communityId" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="member_id" property="memberId" jdbcType="VARCHAR"/>
        <result column="is_open" property="isOpen" jdbcType="INTEGER"/>
        <result column="remaining_storage_size" property="remainingStorageSize" jdbcType="INTEGER"/>
        <result column="storage_size" property="storageSize" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, province_id, county_id, city_id, town_id, village_id, community_id, password, 
    member_id, is_open, remaining_storage_size, storage_size, create_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from cemetery
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cemetery
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insertSelective" parameterType="com.bestomb.entity.Cemetery">
        insert into cemetery
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="provinceId != null">
                province_id,
            </if>
            <if test="countyId != null">
                county_id,
            </if>
            <if test="cityId != null">
                city_id,
            </if>
            <if test="townId != null">
                town_id,
            </if>
            <if test="villageId != null">
                village_id,
            </if>
            <if test="communityId != null">
                community_id,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="isOpen != null">
                is_open,
            </if>
            <if test="remainingStorageSize != null">
                remaining_storage_size,
            </if>
            <if test="storageSize != null">
                storage_size,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="provinceId != null">
                #{provinceId,jdbcType=VARCHAR},
            </if>
            <if test="countyId != null">
                #{countyId,jdbcType=VARCHAR},
            </if>
            <if test="cityId != null">
                #{cityId,jdbcType=VARCHAR},
            </if>
            <if test="townId != null">
                #{townId,jdbcType=VARCHAR},
            </if>
            <if test="villageId != null">
                #{villageId,jdbcType=VARCHAR},
            </if>
            <if test="communityId != null">
                #{communityId,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=VARCHAR},
            </if>
            <if test="isOpen != null">
                #{isOpen,jdbcType=INTEGER},
            </if>
            <if test="remainingStorageSize != null">
                #{remainingStorageSize,jdbcType=INTEGER},
            </if>
            <if test="storageSize != null">
                #{storageSize,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bestomb.entity.Cemetery">
        update cemetery
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="provinceId != null">
                province_id = #{provinceId,jdbcType=VARCHAR},
            </if>
            <if test="countyId != null">
                county_id = #{countyId,jdbcType=VARCHAR},
            </if>
            <if test="cityId != null">
                city_id = #{cityId,jdbcType=VARCHAR},
            </if>
            <if test="townId != null">
                town_id = #{townId,jdbcType=VARCHAR},
            </if>
            <if test="villageId != null">
                village_id = #{villageId,jdbcType=VARCHAR},
            </if>
            <if test="communityId != null">
                community_id = #{communityId,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=VARCHAR},
            </if>
            <if test="isOpen != null">
                is_open = #{isOpen,jdbcType=INTEGER},
            </if>
            <if test="remainingStorageSize != null">
                remaining_storage_size = #{remainingStorageSize,jdbcType=INTEGER},
            </if>
            <if test="storageSize != null">
                storage_size = #{storageSize,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="countByMemberId" resultType="java.lang.Long">
        select
        count(1)
        from cemetery
        where member_id = #{member_id}
    </select>
    <select id="countByPagination" resultType="java.lang.Long">
        select count(1) from cemetery
        <where>
            <if test="community_id != null and community_id != ''">
                community_id = #{community_id}
            </if>
        </where>
    </select>
    <select id="selectByPagination" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from cemetery
        <where>
            <if test="community_id != null and community_id != ''">
                community_id = #{community_id}
            </if>
        </where>
        order by create_time asc
        limit ${page.pageNo}, ${page.pageSize}
    </select>
    <select id="selectByPositioning" resultType="java.lang.Long">
        select
        count(1)
        from cemetery
        where
        community_id = #{community_id}
        and
        id &lt;= #{id}
        order by create_time asc
    </select>
    <select id="countyByLimit" resultType="java.lang.Long">
        select
        count(1)
        from (
          select id from cemetery where community_id = #{community_id} limit ${page.pageNo}, ${page.pageSize}
        ) a
    </select>
    <select id="selectByMemberId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from cemetery
        where member_id = ${member_id}
        order by create_time asc
    </select>
</mapper>