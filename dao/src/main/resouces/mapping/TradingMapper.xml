<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bestomb.dao.ITradingDao" >
  <resultMap id="BaseResultMap" type="com.bestomb.entity.TradingDetail" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="instructions" property="instructions" jdbcType="VARCHAR" />
    <result column="trading" property="trading" jdbcType="DOUBLE" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, instructions, trading, type, create_time, member_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from trading_detail
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from trading_detail
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bestomb.entity.TradingDetail" >
    <selectKey keyProperty="id" resultType="String" order="BEFORE">
        select replace(uuid(),'-','') from dual
    </selectKey>
    insert into trading_detail (id, instructions, trading, 
      type, create_time, member_id
      )
    values (#{id,jdbcType=VARCHAR}, #{instructions,jdbcType=VARCHAR}, #{trading,jdbcType=DOUBLE}, 
      #{type,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bestomb.entity.TradingDetail" >
    <selectKey keyProperty="id" resultType="String" order="BEFORE">
        select replace(uuid(),'-','') from dual
    </selectKey>
    insert into trading_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="instructions != null" >
        instructions,
      </if>
      <if test="trading != null" >
        trading,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="instructions != null" >
        #{instructions,jdbcType=VARCHAR},
      </if>
      <if test="trading != null" >
        #{trading,jdbcType=DOUBLE},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bestomb.entity.TradingDetail" >
    update trading_detail
    <set >
      <if test="instructions != null" >
        instructions = #{instructions,jdbcType=VARCHAR},
      </if>
      <if test="trading != null" >
        trading = #{trading,jdbcType=DOUBLE},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bestomb.entity.TradingDetail" >
    update trading_detail
    set instructions = #{instructions,jdbcType=VARCHAR},
      trading = #{trading,jdbcType=DOUBLE},
      type = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>