<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bestomb.dao.IPhotoDao">
    <resultMap id="BaseResultMap" type="com.bestomb.entity.Photo">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="album_id" property="albumId" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="INTEGER"/>
        <result column="file_size" property="fileSize" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, url, album_id, create_time, file_size
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from photo
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from photo
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.bestomb.entity.Photo">
    insert into photo (id, name, url, 
      album_id, create_time, file_size
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{albumId,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}, #{fileSize,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.bestomb.entity.Photo">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into photo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="albumId != null">
                album_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="fileSize != null">
                file_size,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="albumId != null">
                #{albumId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=INTEGER},
            </if>
            <if test="fileSize != null">
                #{fileSize,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bestomb.entity.Photo">
        update photo
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="albumId != null">
                album_id = #{albumId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=INTEGER},
            </if>
            <if test="fileSize != null">
                file_size = #{fileSize,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bestomb.entity.Photo">
    update photo
    set name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      album_id = #{albumId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      file_size = #{fileSize,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <!-- 根据查询条件查询音乐总数 -->
    <select id="countByCondition" resultType="java.lang.Integer">
    select count(1) from photo
    where album_id = #{albumId}
  </select>

    <!-- 根据查询条件查询音乐列表 -->
    <select id="selectByCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from photo
        where album_id = #{albumId}
        limit ${page.start}, ${page.pageSize}
    </select>
</mapper>