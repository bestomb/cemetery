<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bestomb.dao.IMemberAccountDao" >
  <resultMap id="BaseResultMap" type="com.bestomb.entity.MemberAccount" >
    <id column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="mobile_number" property="mobileNumber" jdbcType="BIGINT" />
    <result column="login_password" property="loginPassword" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="inviter_id" property="inviterId" jdbcType="INTEGER" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="trading_amount" property="tradingAmount" jdbcType="DOUBLE" />
    <result column="trading_password" property="tradingPassword" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    member_id, mobile_number, login_password, nick_name, inviter_id, integral, trading_amount, 
    trading_password, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from member_account
    where member_id = #{memberId,jdbcType=INTEGER}
  </select>
  <select id="selectByMobile" resultType="java.lang.Integer" parameterType="java.lang.Long" >
    select
    count(1)
    from member_account
    where mobile_number = #{mobile_number}
  </select>
  <select id="selectByInviterId" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select
    count(1)
    from member_account
    where inviter_id = #{inviter_id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member_account
    where member_id = #{memberId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bestomb.entity.MemberAccount" >
    insert into member_account (member_id, mobile_number, login_password, 
      nick_name, inviter_id, integral, 
      trading_amount, trading_password, create_time
      )
    values (#{memberId,jdbcType=INTEGER}, #{mobileNumber,jdbcType=BIGINT}, #{loginPassword,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{inviterId,jdbcType=INTEGER}, #{integral,jdbcType=INTEGER}, 
      #{tradingAmount,jdbcType=DOUBLE}, #{tradingPassword,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bestomb.entity.MemberAccount" >
    insert into member_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="mobileNumber != null" >
        mobile_number,
      </if>
      <if test="loginPassword != null" >
        login_password,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="inviterId != null" >
        inviter_id,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="tradingAmount != null" >
        trading_amount,
      </if>
      <if test="tradingPassword != null" >
        trading_password,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="mobileNumber != null" >
        #{mobileNumber,jdbcType=BIGINT},
      </if>
      <if test="loginPassword != null" >
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="inviterId != null" >
        #{inviterId,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="tradingAmount != null" >
        #{tradingAmount,jdbcType=DOUBLE},
      </if>
      <if test="tradingPassword != null" >
        #{tradingPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bestomb.entity.MemberAccount" >
    update member_account
    <set >
      <if test="mobileNumber != null" >
        mobile_number = #{mobileNumber,jdbcType=BIGINT},
      </if>
      <if test="loginPassword != null" >
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="inviterId != null" >
        inviter_id = #{inviterId,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="tradingAmount != null" >
        trading_amount = #{tradingAmount,jdbcType=DOUBLE},
      </if>
      <if test="tradingPassword != null" >
        trading_password = #{tradingPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bestomb.entity.MemberAccount" >
    update member_account
    set mobile_number = #{mobileNumber,jdbcType=BIGINT},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      inviter_id = #{inviterId,jdbcType=INTEGER},
      integral = #{integral,jdbcType=INTEGER},
      trading_amount = #{tradingAmount,jdbcType=DOUBLE},
      trading_password = #{tradingPassword,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER}
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
</mapper>