<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bestomb.dao.IMasterDao">
    <resultMap id="BaseResultMap" type="com.bestomb.entity.Master">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="portrait" property="portrait" jdbcType="VARCHAR"/>
        <result column="tombstone_id" property="tombstoneId" jdbcType="VARCHAR"/>
        <result column="birthday" property="birthday" jdbcType="VARCHAR"/>
        <result column="death_time" property="deathTime" jdbcType="VARCHAR"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="creater" property="creater" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.bestomb.entity.MasterWithBLOBs" extends="BaseResultMap">
        <result column="life_introduce" property="lifeIntroduce" jdbcType="LONGVARCHAR"/>
        <result column="last_wish" property="lastWish" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, portrait, tombstone_id, birthday, death_time, sort, age, creater, create_time
  </sql>
    <sql id="Blob_Column_List">
    life_introduce, last_wish
  </sql>

    <!--详细信息查询-->
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from master
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from master
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.bestomb.entity.MasterWithBLOBs">
    insert into master (id, name, portrait, 
      tombstone_id, birthday, death_time, 
      sort, life_introduce, last_wish, age, creater, create_time
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{portrait,jdbcType=VARCHAR}, 
      #{tombstoneId,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, #{deathTime,jdbcType=VARCHAR},
      #{sort,jdbcType=INTEGER}, #{lifeIntroduce,jdbcType=LONGVARCHAR}, #{lastWish,jdbcType=LONGVARCHAR},
      #{age,jdbcType=INTEGER}, #{creater,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.bestomb.entity.MasterWithBLOBs">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into master
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="portrait != null">
                portrait,
            </if>
            <if test="tombstoneId != null">
                tombstone_id,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="deathTime != null">
                death_time,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="lifeIntroduce != null">
                life_introduce,
            </if>
            <if test="lastWish != null">
                last_wish,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="creater != null">
                creater,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="dataTime != null">
                data_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="portrait != null">
                #{portrait,jdbcType=VARCHAR},
            </if>
            <if test="tombstoneId != null">
                #{tombstoneId,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=VARCHAR},
            </if>
            <if test="deathTime != null">
                #{deathTime,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="lifeIntroduce != null">
                #{lifeIntroduce,jdbcType=LONGVARCHAR},
            </if>
            <if test="lastWish != null">
                #{lastWish,jdbcType=LONGVARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="creater != null">
                #{creater,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="dataTime != null">
                #{dataTime},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bestomb.entity.MasterWithBLOBs">
        update master
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="portrait != null">
                portrait = #{portrait,jdbcType=VARCHAR},
            </if>
            <if test="tombstoneId != null">
                tombstone_id = #{tombstoneId,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=VARCHAR},
            </if>
            <if test="deathTime != null">
                death_time = #{deathTime,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="lifeIntroduce != null">
                life_introduce = #{lifeIntroduce,jdbcType=LONGVARCHAR},
            </if>
            <if test="lastWish != null">
                last_wish = #{lastWish,jdbcType=LONGVARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="creater != null">
                creater = #{creater,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bestomb.entity.MasterWithBLOBs">
    update master
    set name = #{name,jdbcType=VARCHAR},
      portrait = #{portrait,jdbcType=VARCHAR},
      tombstone_id = #{tombstoneId,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      death_time = #{deathTime,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      life_introduce = #{lifeIntroduce,jdbcType=LONGVARCHAR},
      last_wish = #{lastWish,jdbcType=LONGVARCHAR},
      age = #{age,jdbcType=INTEGER},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.bestomb.entity.Master">
    update master
    set name = #{name,jdbcType=VARCHAR},
      portrait = #{portrait,jdbcType=VARCHAR},
      tombstone_id = #{tombstoneId,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      death_time = #{deathTime,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <!--查询总数-->
    <select id="countByPagination" resultType="java.lang.Long">
        select count(1) from master
        WHERE tombstone_id in
        <if test="cemeteryId != null and cemeteryId != ''">
            (select id from tombstone where cemetery_id = #{cemeteryId,jdbcType=INTEGER})
        </if>
    </select>

    <!--分页查询-->
    <select id="selectByPagination" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from master
        WHERE tombstone_id in
        <if test="cemeteryId != null and cemeteryId != ''">
            (select id from tombstone where cemetery_id = #{cemeteryId,jdbcType=INTEGER})
        </if>
        limit ${page.pageNo}, ${page.pageSize}
    </select>

    <!--根据陵园墓碑编号查询墓中纪念人信息集合-->
    <select id="selectByTombstone" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from master
        where tombstone_id = #{tombstoneId,jdbcType=VARCHAR}
    </select>

    <!-- 根据纪念人编号查询贡品集合 -->
    <select id="getOblationByMasterId" resultType="java.util.HashMap">
        select gur.lifecycle,go.name, go.type,m.file_address
        from
        goods_use_relat gur LEFT JOIN goods_official go on (gur.goods_id = go.id)
        left JOIN model m on (go.extend_attribute = m.id)
        where gur.object_id in
        <foreach item="item" collection="masterIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 根据时间范围统计新增纪念人总数 -->
    <select id="countByTime" resultType="java.lang.Long">
        select count(1) from master
        <where>
            <if test="beginTime != null">
                and data_time <![CDATA[ > ]]> ${beginTime}
            </if>
            <if test="endTime != null">
                and data_time <![CDATA[ < ]]> ${endTime}
            </if>
        </where>
    </select>
</mapper>