<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bestomb.dao.ILifeWorksDao" >
  <resultMap id="BaseResultMap" type="com.bestomb.entity.LifeWorks" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="collection_id" property="collectionId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.bestomb.entity.LifeWorks" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, collection_id, create_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from life_works
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from life_works
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bestomb.entity.LifeWorks" >
    insert into life_works (id, name, collection_id, 
      create_time, content)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{collectionId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bestomb.entity.LifeWorks" >
    <selectKey keyProperty="id" resultType="String" order="BEFORE">
      select replace(uuid(),'-','') from dual
    </selectKey>
    insert into life_works
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="collectionId != null" >
        collection_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="collectionId != null" >
        #{collectionId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bestomb.entity.LifeWorks" >
    update life_works
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="collectionId != null" >
        collection_id = #{collectionId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bestomb.entity.LifeWorks" >
    update life_works
    set name = #{name,jdbcType=VARCHAR},
      collection_id = #{collectionId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bestomb.entity.LifeWorks" >
    update life_works
    set name = #{name,jdbcType=VARCHAR},
      collection_id = #{collectionId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!-- 根据查询条件查询陵园纪念人相册总数 -->
  <select id="countByCondition" resultType="java.lang.Integer">
    select count(1) from life_works
    where collection_id = #{collectionId}
  </select>

  <!-- 根据查询条件查询陵园纪念人相册列表 -->
  <select id="selectByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from life_works
    where collection_id = #{collectionId}
    limit ${page.start}, ${page.pageSize}
  </select>
</mapper>